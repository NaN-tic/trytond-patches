diff -r 4795583a375d move.py
--- a/move.py	Mon Feb 01 12:12:47 2016 +0100
+++ b/move.py	Mon Feb 01 12:16:17 2016 +0100
@@ -1136,16 +1136,31 @@
         res_product_ids = set()
         quantities = {}
         keys = set()
-        for line in raw_lines:
-            location = line[0]
-            key = tuple(line[1:-1])
-            quantity = line[-1]
-            quantities[(location,) + key] = quantity
-            res_product_ids.add(product_getter(line))
-            keys.add(key)
+
+        if with_childs and len(location_ids) == 1:
+            for line in raw_lines:
+                location = line[0]
+                row_key = tuple(line[1:-1])
+                quantity = line[-1]
+                key = (location,) + row_key
+                if key not in quantities:
+                    quantities[key] = 0
+                quantities[key] += quantity
+                res_product_ids.add(product_getter(line))
+                keys.add(key)
+
+        if len(location_ids) > 1:
+            for line in raw_lines:
+                location = line[0]
+                key = tuple(line[1:-1])
+                quantity = line[-1]
+                quantities[(location,) + key] = quantity
+                res_product_ids.add(product_getter(line))
+                keys.add(key)
 
         # Propagate quantities on from child locations to their parents
-        if with_childs:
+        if with_childs and len(location_ids) > 1:
+
             # Fetch all child locations
             locations = Location.search([
                     ('parent', 'child_of', location_ids),
@@ -1184,9 +1199,28 @@
                 if location not in location_ids:
                     del quantities[key]
 
+        Product = Pool().get('product.product')
+        Template = Pool().get('product.template')
+        Uom = Pool().get('product.uom')
+
         # Round quantities
-        default_uom = dict((p.id, p.default_uom) for p in
-            Product.browse(list(res_product_ids)))
+        product = Product.__table__()
+        template = Template.__table__()
+
+        cursor = Transaction().cursor
+
+        cursor.execute(*template.join(product,
+            condition=product.template == template.id).select(
+                product.id, template.default_uom,
+                where=reduce_ids(product.id, list(res_product_ids))))
+
+        default_uom = {}
+        for product in res_product_ids:
+            default_uom[product] = {}
+
+        for product, duom in cursor.fetchall():
+            default_uom[product] = Uom(duom)
+
         for key, quantity in quantities.iteritems():
             location = key[0]
             product = product_getter(key)
