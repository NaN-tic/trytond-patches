diff --git a/tryton/modules/production/production.py b/tryton/modules/production/production.py
index 4fba9d280a..6139997776 100644
--- a/tryton/modules/production/production.py
+++ b/tryton/modules/production/production.py
@@ -674,14 +674,14 @@ class Production(ShipmentAssignMixin, Workflow, ModelSQL, ModelView):
             dates = production._get_move_planned_date()
             input_date, output_date = dates
             inputs = [m for m in production.inputs
-                    if m.state not in ('assigned', 'done', 'cancelled')]
+                    if m.state not in ('done', 'cancelled')]
             if inputs:
                 to_write.append(inputs)
                 to_write.append({
                         'planned_date': input_date,
                         })
             outputs = [m for m in production.outputs
-                    if m.state not in ('assigned', 'done', 'cancelled')]
+                    if m.state not in ('done', 'cancelled')]
             if outputs:
                 to_write.append(outputs)
                 to_write.append({
diff --git a/tryton/modules/stock/shipment.py b/tryton/modules/stock/shipment.py
index 34fa7c8210..24721af77e 100644
--- a/tryton/modules/stock/shipment.py
+++ b/tryton/modules/stock/shipment.py
@@ -450,7 +450,7 @@ class ShipmentIn(ShipmentMixin, Workflow, ModelSQL, ModelView):
             # Update planned_date only for later to not be too optimistic if
             # the shipment is not directly received.
             incoming_moves_to_write = [m for m in shipment.incoming_moves
-                if (m.state not in ('assigned', 'done', 'cancelled')
+                if (m.state not in ('done', 'cancelled')
                     and ((m.planned_date or datetime.date.max)
                         < (incoming_date or datetime.date.max)))]
             if incoming_moves_to_write:
@@ -458,7 +458,7 @@ class ShipmentIn(ShipmentMixin, Workflow, ModelSQL, ModelView):
                             'planned_date': incoming_date,
                             }))
             inventory_moves_to_write = [m for m in shipment.inventory_moves
-                if (m.state not in ('assigned', 'done', 'cancelled')
+                if (m.state not in ('done', 'cancelled')
                     and ((m.planned_date or datetime.date.max)
                         < (inventory_date or datetime.date.max)))]
             if inventory_moves_to_write:
@@ -837,7 +837,7 @@ class ShipmentInReturn(ShipmentAssignMixin, Workflow, ModelSQL, ModelView):
         to_write = []
         for shipment in shipments:
             moves = [m for m in shipment.moves
-                    if (m.state not in ('assigned', 'done', 'cancelled')
+                    if (m.state not in ('done', 'cancelled')
                         and m.planned_date != shipment._move_planned_date)]
             if moves:
                 to_write.extend((moves, {
@@ -1630,7 +1630,7 @@ class ShipmentOut(ShipmentAssignMixin, Workflow, ModelSQL, ModelView):
         for shipment in shipments:
             outgoing_date, inventory_date = shipment._move_planned_date
             out_moves_to_write = [x for x in shipment.outgoing_moves
-                    if (x.state not in ('assigned', 'done', 'cancelled')
+                    if (x.state not in ('done', 'cancelled')
                         and x.planned_date != outgoing_date)]
             if out_moves_to_write:
                 to_write.extend((out_moves_to_write, {
@@ -1638,7 +1638,7 @@ class ShipmentOut(ShipmentAssignMixin, Workflow, ModelSQL, ModelView):
                         }))

             inv_moves_to_write = [x for x in shipment.inventory_moves
-                    if (x.state not in ('assigned', 'done', 'cancelled')
+                    if (x.state not in ('done', 'cancelled')
                         and x.planned_date != inventory_date)]
             if inv_moves_to_write:
                 to_write.extend((inv_moves_to_write, {
@@ -2065,14 +2065,14 @@ class ShipmentOutReturn(ShipmentMixin, Workflow, ModelSQL, ModelView):
             dates = shipment._get_move_planned_date()
             incoming_date, inventory_date = dates
             incoming_moves_to_write = [x for x in shipment.incoming_moves
-                if (x.state not in ('assigned', 'done', 'cancelled')
+                if (x.state not in ('done', 'cancelled')
                     and x.planned_date != incoming_date)]
             if incoming_moves_to_write:
                 to_write.extend((incoming_moves_to_write, {
                             'planned_date': incoming_date,
                             }))
             inventory_moves_to_write = [x for x in shipment.inventory_moves
-                if (x.state not in ('assigned', 'done', 'cancelled')
+                if (x.state not in ('done', 'cancelled')
                     and x.planned_date != inventory_date)]
             if inventory_moves_to_write:
                 to_write.extend((inventory_moves_to_write, {
@@ -2918,7 +2918,7 @@ class ShipmentInternal(ShipmentAssignMixin, Workflow, ModelSQL, ModelView):
                     and shipment.state not in {'request', 'draft'}):
                 outgoing_date, incoming_date = dates
                 outgoing_moves = [m for m in shipment.outgoing_moves
-                    if (m.state not in ('assigned', 'done', 'cancelled')
+                    if (m.state not in ('done', 'cancelled')
                         and m.planned_date != outgoing_date)]
                 if outgoing_moves:
                     to_write.append(outgoing_moves)
@@ -2926,7 +2926,7 @@ class ShipmentInternal(ShipmentAssignMixin, Workflow, ModelSQL, ModelView):
                             'planned_date': outgoing_date,
                             })
                 incoming_moves = [m for m in shipment.incoming_moves
-                    if (m.state not in ('assigned', 'done', 'cancelled')
+                    if (m.state not in ('done', 'cancelled')
                         and m.planned_date != incoming_date)]
                 if incoming_moves:
                     to_write.append(incoming_moves)
@@ -2936,7 +2936,7 @@ class ShipmentInternal(ShipmentAssignMixin, Workflow, ModelSQL, ModelView):
             else:
                 planned_start_date = shipment.planned_start_date
                 moves = [m for m in shipment.moves
-                    if (m.state not in {'assigned', 'done', 'cancelled'}
+                    if (m.state not in {'done', 'cancelled'}
                         and m.planned_date != planned_start_date)]
                 if moves:
                     to_write.append(moves)
