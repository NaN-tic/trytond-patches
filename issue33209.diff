diff -r 98a40ac6744f invoice.py
--- a/trytond/trytond/modules/account_invoice/invoice.py	Thu Jan 18 12:04:45 2018 +0100
+++ b/trytond/trytond/modules/account_invoice/invoice.py	Thu Jan 18 14:34:01 2018 +0100
@@ -2689,11 +2689,11 @@
         refund = self.start.with_refund
         invoices = Invoice.browse(Transaction().context['active_ids'])
 
-        if refund:
-            for invoice in invoices:
-                if invoice.state != 'posted':
-                    self.raise_user_error('refund_non_posted',
-                        (invoice.rec_name,))
+        for invoice in invoices:
+            if invoice.state != 'posted':
+                self.raise_user_error('refund_non_posted',
+                    (invoice.rec_name,))
+            if refund:
                 if invoice.payment_lines:
                     self.raise_user_error('refund_with_payement',
                         (invoice.rec_name,))
diff -r 98a40ac6744f tests/scenario_invoice.rst
--- a/trytond/trytond/modules/account_invoice/tests/scenario_invoice.rst	Thu Jan 18 12:04:45 2018 +0100
+++ b/trytond/trytond/modules/account_invoice/tests/scenario_invoice.rst	Thu Jan 18 14:34:01 2018 +0100
@@ -119,6 +119,15 @@
     Decimal('20.00')
     >>> invoice.total_amount
     Decimal('240.00')
+    >>> invoice.save()
+    >>> invoice.state
+    u'draft'
+    >>> credit = Wizard('account.invoice.credit', [invoice])
+    >>> credit.form.with_refund = True
+    >>> credit.execute('credit')  #doctest: +IGNORE_EXCEPTION_DETAIL
+    Traceback (most recent call last):
+        ...
+    UserError: ('UserError', (u'You can not credit with refund invoice "1 Party" because it is not posted.', ''))
     >>> invoice.click('post')
     >>> invoice.state
     u'posted'
