Index: nan40/trytond/trytond/modules/stock/shipment.py
===================================================================
--- nan40.orig/trytond/trytond/modules/stock/shipment.py	2016-05-31 15:14:03.778355893 +0200
+++ nan40/trytond/trytond/modules/stock/shipment.py	2016-05-31 15:14:03.774355893 +0200
@@ -1152,6 +1152,14 @@
             unit_price=move.unit_price,
             )
 
+    @staticmethod
+    def _sync_inventory_to_outgoing_grouping_key(move, type):
+        '''
+        Returns the key used to sync inventory and outgoing moves for move
+        Type contains outgoing or incomming to indicate the kind of move
+        '''
+        return move.product.id
+
     @classmethod
     def _sync_inventory_to_outgoing(cls, shipments, create=True, write=True):
         'Synchronise outgoing moves with inventory moves'
@@ -1166,8 +1174,10 @@
                     continue
                 quantity = Uom.compute_qty(move.uom, move.quantity,
                         move.product.default_uom, round=False)
-                outgoing_qty.setdefault(move.product.id, 0.0)
-                outgoing_qty[move.product.id] += quantity
+                key = cls._sync_inventory_to_outgoing_grouping_key(move,
+                    'outgoing')
+                outgoing_qty.setdefault(key, 0.0)
+                outgoing_qty[key] += quantity
 
             to_create = []
             for move in shipment.inventory_moves:
@@ -1175,19 +1185,20 @@
                     continue
                 qty_default_uom = Uom.compute_qty(move.uom, move.quantity,
                     move.product.default_uom, round=False)
+                key = cls._sync_inventory_to_outgoing_grouping_key(move,
+                    'inventory')
                 # Check if the outgoing move doesn't exist already
-                if outgoing_qty.get(move.product.id):
+                if outgoing_qty.get(key):
                     # If it exist, decrease the sum
-                    if qty_default_uom <= outgoing_qty[move.product.id]:
-                        outgoing_qty[move.product.id] -= qty_default_uom
+                    if qty_default_uom <= outgoing_qty[key]:
+                        outgoing_qty[key] -= qty_default_uom
                         continue
                     # Else create the complement
                     else:
-                        out_quantity = (qty_default_uom
-                            - outgoing_qty[move.product.id])
+                        out_quantity = (qty_default_uom - outgoing_qty[key])
                         out_quantity = Uom.compute_qty(
                             move.product.default_uom, out_quantity, move.uom)
-                        outgoing_qty[move.product.id] = 0.0
+                        outgoing_qty[key] = 0.0
                 else:
                     out_quantity = move.quantity
 
@@ -1218,7 +1229,7 @@
                                     move.quantity - exc_qty,
                                     move.uom.rounding)),
                                 })
-                    outgoing_qty[move.product.id] -= removed_qty
+                    outgoing_qty[key] -= removed_qty
 
     @classmethod
     @ModelView.button
