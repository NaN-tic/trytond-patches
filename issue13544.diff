diff --git a/tryton/modules/purchase/purchase.py b/tryton/modules/purchase/purchase.py
index adea9de46a..5dd526f1ae 100644
--- a/tryton/modules/purchase/purchase.py
+++ b/tryton/modules/purchase/purchase.py
@@ -1575,16 +1575,16 @@ class Line(sequence_ordered(), ModelSQL, ModelView):
     def get_from_location(self, name):
         if (self.quantity or 0) >= 0:
             if self.purchase.party.supplier_location:
-                return self.purchase.party.supplier_location.id
+                return self.purchase.party.supplier_location
         elif self.purchase.return_from_location:
-            return self.purchase.return_from_location.id
+            return self.purchase.return_from_location

     def get_to_location(self, name):
         if (self.quantity or 0) >= 0:
             if self.purchase.warehouse:
-                return self.purchase.warehouse.input_location.id
+                return self.purchase.warehouse.input_location
         elif self.purchase.party.supplier_location:
-            return self.purchase.party.supplier_location.id
+            return self.purchase.party.supplier_location

     @fields.depends('moves', methods=['planned_delivery_date'])
     def on_change_with_delivery_date(self, name=None):
diff --git a/tryton//sale/sale.py b/tryton/modules/sale/sale.py
index 762996bef3..de1f3e5d87 100644
--- a/tryton/modules/sale/sale.py
+++ b/tryton/modules/sale/sale.py
@@ -1596,18 +1596,18 @@ class SaleLine(TaxableMixin, sequence_ordered(), ModelSQL, ModelView):
     def get_from_location(self, name):
         if (self.quantity or 0) >= 0:
             if self.warehouse:
-                return self.warehouse.output_location.id
+                return self.warehouse.output_location
         else:
             party = self.sale.shipment_party or self.sale.party
-            return party.customer_location.id
+            return party.customer_location

     def get_to_location(self, name):
         if (self.quantity or 0) >= 0:
             party = self.sale.shipment_party or self.sale.party
-            return party.customer_location.id
+            return party.customer_location
         else:
             if self.warehouse:
-                return self.warehouse.input_location.id
+                return self.warehouse.input_location

     @fields.depends('moves', methods=['planned_shipping_date'])
     def on_change_with_shipping_date(self, name=None):
