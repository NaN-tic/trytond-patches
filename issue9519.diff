diff --git a/trytond/trytond/modules/sale/sale.py b/trytond/trytond/modules/sale/sale.py
index 3d66f74..39db53a 100644
--- a/trytond/trytond/modules/sale/sale.py
+++ b/trytond/trytond/modules/sale/sale.py
@@ -1009,20 +1009,21 @@ class SaleLine(sequence_ordered(), ModelSQL, ModelView):
             'readonly': Eval('sale_state') != 'draft',
             },
         context={
+            'company': Eval('company', None),
+            },
+        search_context={
             'locations': If(Bool(Eval('_parent_sale', {}).get('warehouse')),
                 [Eval('_parent_sale', {}).get('warehouse', 0)], []),
             'stock_date_end': Eval('_parent_sale', {}).get('sale_date'),
             'stock_skip_warehouse': True,
-            # From _get_context_sale_price
-            'company': Eval(
-                '_parent_sale', {}).get('company', None),
             'currency': Eval('_parent_sale', {}).get('currency'),
             'customer': Eval('_parent_sale', {}).get('party'),
             'sale_date': Eval('_parent_sale', {}).get('sale_date'),
             'uom': Eval('unit'),
             'taxes': Eval('taxes', []),
             'quantity': Eval('quantity'),
-            }, depends=['type', 'sale_state'])
+            },
+        depends=['type', 'sale_state', 'company'])
     product_uom_category = fields.Function(
         fields.Many2One('product.uom.category', 'Product Uom Category'),
         'on_change_with_product_uom_category')
diff --git a/trytond/trytond/modules/sale/purchase.py b/trytond/trytond/modules/purchase/purchase.py
index 30ae987..c226385 100644
--- a/trytond/trytond/modules/purchase/purchase.py
+++ b/trytond/trytond/modules/purchase/purchase.py
@@ -967,6 +967,9 @@ class PurchaseLine(sequence_ordered(), ModelSQL, ModelView):
             'required': Bool(Eval('product_supplier')),
             },
         context={
+            'company': Eval('company', None),
+            },
+        search_context={
             'locations': If(Bool(Eval('_parent_purchase', {}).get(
                         'warehouse')),
                 [Eval('_parent_purchase', {}).get('warehouse', None)],
@@ -974,9 +977,6 @@ class PurchaseLine(sequence_ordered(), ModelSQL, ModelView):
             'stock_date_end': Eval('_parent_purchase', {}).get(
                 'purchase_date'),
             'stock_skip_warehouse': True,
-            # From _get_context_purchase_price
-            'company': Eval(
-                '_parent_purchase', {}).get('company', None),
             'currency': Eval('_parent_purchase', {}).get('currency'),
             'supplier': Eval('_parent_purchase', {}).get('party'),
             'purchase_date': Eval('_parent_purchase', {}).get('purchase_date'),
