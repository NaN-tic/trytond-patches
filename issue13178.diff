diff --git a/tryton/sao/src/screen.js b/tryton/sao/src/screen.js
index cca05e3810..2d062edee2 100644
--- a/tryton/sao/src/screen.js
+++ b/tryton/sao/src/screen.js
@@ -1310,7 +1310,9 @@
         },
         load: function(ids, set_cursor=true, modified=false, position=-1) {
             this.group.load(ids, modified, position);
-            this.current_view.reset();
+            if (this.current_view) {
+                this.current_view.reset();
+            }
             this.current_record = null;
             return this.display().then(() => {
                 if (set_cursor) {
@@ -1328,7 +1330,7 @@
             } else {
                 this.current_record = null;
             }
-            if (this.views) {
+            if (this.views && this.current_view) {
                 var search_prm = this.search_active(
                         ~['tree', 'graph', 'calendar'].indexOf(
                             this.current_view.view_type));
@@ -1364,7 +1366,7 @@
         },
         _get_next_record: function() {
             var view = this.current_view;
-            if (~['tree', 'form', 'list-form'].indexOf(view.view_type) &&
+            if (view && ~['tree', 'form', 'list-form'].indexOf(view.view_type) &&
                     this.current_record && this.current_record.group) {
                 var group = this.current_record.group;
                 var record = this.current_record;
@@ -1394,15 +1396,17 @@
         },
         display_next: function() {
             var view = this.current_view;
-            view.set_value();
+            if (view) {
+                view.set_value();
+            }
             this.set_cursor(false, false);
             this.current_record = this._get_next_record();
             this.set_cursor(false, false);
-            return view.display();
+            return view ? view.display() : jQuery.when();
         },
         _get_previous_record: function() {
             var view = this.current_view;
-            if (~['tree', 'form', 'list-form'].indexOf(view.view_type) &&
+            if (view && ~['tree', 'form', 'list-form'].indexOf(view.view_type) &&
                     this.current_record && this.current_record.group) {
                 var group = this.current_record.group;
                 var record = this.current_record;
@@ -1432,11 +1436,13 @@
         },
         display_previous: function() {
             var view = this.current_view;
-            view.set_value();
+            if (view) {
+                view.set_value();
+            }
             this.set_cursor(false, false);
             this.current_record = this._get_previous_record();
             this.set_cursor(false, false);
-            return view.display();
+            return view ? view.display() : jQuery.when();
         },
         get selected_records() {
             if (this.current_view) {
@@ -1474,7 +1480,7 @@
             });
         },
         default_row_activate: function() {
-            if ((this.current_view.view_type == 'tree') &&
+            if (this.current_view && (this.current_view.view_type == 'tree') &&
                     (this.current_view.attributes.keyword_open == 1)) {
                 const id = this.get_id();
                 if (id) {
@@ -1498,14 +1504,14 @@
         new_: function(default_=true, rec_name=null) {
             var previous_view = this.current_view;
             var prm = jQuery.when();
-            if (this.current_view.view_type == 'calendar') {
+            if (this.current_view && this.current_view.view_type == 'calendar') {
                 var selected_date = this.current_view.get_selected_date();
             }
             if (this.current_view && !this.current_view.creatable) {
                 prm = this.switch_view('form', undefined, true, false);
             }
             return prm.then(() => {
-                if (!this.current_view.editable) {
+                if (!this.current_view || !this.current_view.editable) {
                     return;
                 }
                 var group;
@@ -1586,7 +1592,7 @@
         save_current: function() {
             var current_record = this.current_record;
             if (!current_record) {
-                if ((this.current_view.view_type == 'tree') &&
+                if (this.current_view && (this.current_view.view_type == 'tree') &&
                         this.group && this.group.length) {
                     this.current_record = this.group[0];
                     current_record = this.current_record;
@@ -1595,14 +1601,16 @@
                 }
             }
             this.current_view.set_value();
-            var fields = this.current_view.get_fields();
-            var path = current_record.get_path(this.group);
+            if (this.current_view) {
+                var fields = this.current_view.get_fields();
+                var path = current_record.get_path(this.group);
+            }
             var prm = jQuery.Deferred();
-            if (this.current_view.view_type == 'tree') {
+            if (this.current_view && (this.current_view.view_type == 'tree')) {
                 prm = this.group.save().then(() => this.current_record);
             } else if (current_record.validate(fields, null, null, true)) {
                 prm = current_record.save().then(() => current_record);
-            } else {
+            } else if (this.current_view) {
                 return this.current_view.display().then(() => {
                     this.set_cursor();
                     return jQuery.Deferred().reject();
@@ -1636,7 +1644,7 @@
             var test = function(record) {
                 return (record.modified || record.id < 0);
             };
-            if (this.current_view.view_type != 'tree') {
+            if (this.current_view && (this.current_view.view_type != 'tree')) {
                 if (this.current_record) {
                     if (test(this.current_record)) {
                         return true;
@@ -1647,20 +1655,24 @@
                     return true;
                 }
             }
-            if (this.current_view.modified) {
+            if (this.current_view && this.current_view.modified) {
                 return true;
             }
             return false;
         },
         unremove: function() {
-            var records = this.current_view.selected_records;
-            for (const record of records) {
-                record.group.unremove(record);
+            if (this.current_view) {
+                var records = this.current_view.selected_records;
+                for (const record of records) {
+                    record.group.unremove(record);
+                }
             }
         },
         remove: function(delete_, remove, force_remove, records) {
             var prm = jQuery.when();
-            records = records || this.current_view.selected_records;
+            if (!records && this.current_view) {
+                records = records || this.current_view.selected_records;
+            }
             if (jQuery.isEmptyObject(records)) {
                 return prm;
             }
@@ -1701,7 +1713,7 @@
         },
         copy: function() {
             var dfd = jQuery.Deferred();
-            var records = this.current_view.selected_records;
+            var records = this.current_view ? this.current_view.selected_records : [];
             this.model.copy(records, this.context)
                 .then(new_ids => {
                     this.group.load(new_ids, false, this.new_position);
@@ -1882,14 +1894,18 @@
             if (!this.current_record) {
                 return null;
             }
-            this.current_view.set_value();
+            if (this.current_view) {
+                this.current_view.set_value();
+            }
             return this.current_record.get();
         },
         get_on_change_value: function() {
             if (!this.current_record) {
                 return null;
             }
-            this.current_view.set_value();
+            if (this.current_view) {
+                this.current_view.set_value();
+            }
             return this.current_record.get_on_change_value();
         },
         reload: function(ids, written) {
@@ -1906,11 +1922,11 @@
             });
         },
         get_buttons: function() {
-            var selected_records = this.current_view.selected_records;
+            var selected_records = this.current_view ? this.current_view.selected_records : [];
             if (jQuery.isEmptyObject(selected_records)) {
                 return [];
             }
-            var buttons = this.current_view.get_buttons();
+            var buttons = this.current_view ? this.current_view.get_buttons() : [];
             for (const record of selected_records) {
                 buttons = buttons.filter(function(button) {
                     if (button.attributes.type === 'instance') {
@@ -1940,9 +1956,11 @@
                 });
             };

-            var selected_records = this.current_view.selected_records;
-            this.current_view.set_value();
-            var fields = this.current_view.get_fields();
+            if (this.current_view) {
+                var selected_records = this.current_view.selected_records;
+                this.current_view.set_value();
+                var fields = this.current_view.get_fields();
+            }

             var prms = [];
             const reset_state = record => {
@@ -2038,7 +2056,7 @@
             } else if (action.startsWith('switch')) {
                 this.switch_view.apply(this, action.split(' ', 3).slice(1));
             } else if (action == 'reload') {
-                if (~['tree', 'graph', 'calendar'].indexOf(this.current_view.view_type) &&
+                if (this.current_view && ~['tree', 'graph', 'calendar'].indexOf(this.current_view.view_type) &&
                         !this.group.parent) {
                     this.search_filter();
                 }
@@ -2077,7 +2095,7 @@
             var path = ['model', this.model_name];
             var view_ids = this.views.map(
                 function(v) {return v.view_id;}).concat(this.view_ids);
-            if (this.current_view.view_type != 'form') {
+            if (this.current_view && (this.current_view.view_type != 'form')) {
                 var search_value;
                 if (this.attributes.search_value) {
                     search_value = this.attributes.search_value;
@@ -2090,8 +2108,10 @@
                 }
             } else if (this.current_record && (this.current_record.id > -1)) {
                 path.push(this.current_record.id);
-                var i = view_ids.indexOf(this.current_view.view_id);
-                view_ids = view_ids.slice(i).concat(view_ids.slice(0, i));
+                if (this.current_view) {
+                    var i = view_ids.indexOf(this.current_view.view_id);
+                    view_ids = view_ids.slice(i).concat(view_ids.slice(0, i));
+                }
             }
             if (!jQuery.isEmptyObject(view_ids)) {
                 query_string.push(['views', dumps(view_ids)]);
@@ -2185,6 +2205,9 @@
         set_tree_state: function() {
             var parent_, state, state_prm, tree_state_model;
             var view = this.current_view;
+            if (!view) {
+                return jQuery.when();
+            }
             if (!~['tree', 'form', 'list-form'].indexOf(view.view_type)) {
                 return jQuery.when();
             }
