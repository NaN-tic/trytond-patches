diff --git a/tryton/sao/src/view/form.js b/tryton/sao/src/view/form.js
index dbcb11c168..1b7e465e7e 100644
--- a/tryton/sao/src/view/form.js
+++ b/tryton/sao/src/view/form.js
@@ -1545,13 +1552,16 @@ function eval_pyson(value){
                 this.group.css('width', '100%');
             }
             if (this.attributes.translate) {
-                Sao.common.ICONFACTORY.get_icon_img('tryton-translate')
+                jQuery('<button/>', {
+                    'class': 'btn btn-link',
+                    'type': 'button',
+                }).append(Sao.common.ICONFACTORY.get_icon_img('tryton-translate')
                     .appendTo(jQuery('<div/>', {
                         'class': 'icon-input icon-secondary',
                         'aria-label': Sao.i18n.gettext('Translate'),
                         'title': Sao.i18n.gettext('Translate'),
                     }).appendTo(
-                        this.group.addClass('input-icon input-icon-secondary')))
+                        this.group.addClass('input-icon input-icon-secondary'))))
                 .click(this.translate.bind(this));
             }
         },
@@ -1615,7 +1625,10 @@ function eval_pyson(value){
         },
         set_readonly: function(readonly) {
             Sao.View.Form.Char._super.set_readonly.call(this, readonly);
+            var record = this.record;
             this.input.prop('readonly', readonly);
+            this.input.prop('disabled', !record);
+            this.el.find('button').prop('disabled', readonly || ! record);
         },
         focus: function() {
             this.input.focus();
@@ -1719,7 +1732,11 @@ function eval_pyson(value){
                     'tabindex': -1,
                 }).appendTo(group);
                 this.input.appendTo(this.icon);
-                Sao.common.ICONFACTORY.get_icon_img('tryton-date')
+                jQuery('<button/>', {
+                    'class': 'btn btn-link',
+                    'type': 'button',
+                    'tabindex': -1,
+                }).append(Sao.common.ICONFACTORY.get_icon_img('tryton-date'))
                     .appendTo(this.icon);
             }
             this.date.css('max-width', this._width);
@@ -1898,6 +1915,7 @@ function eval_pyson(value){
         set_readonly: function(readonly) {
             Sao.View.Form.TimeDelta._super.set_readonly.call(this, readonly);
             this.input.prop('readonly', readonly);
+            this.input.prop('disabled', !this.record);
         }
     });
 
@@ -2033,6 +2051,7 @@ function eval_pyson(value){
         set_readonly: function(readonly) {
             Sao.View.Form.Integer._super.set_readonly.call(this, readonly);
             this.input_text.prop('readonly', readonly);
+            this.input_text.prop('disabled', !this.record);
         },
         focus: function() {
             if (!this.input.prop('readonly')) {
@@ -2221,6 +2240,7 @@ function eval_pyson(value){
         set_readonly: function(readonly) {
             Sao.View.Form.Boolean._super.set_readonly.call(this, readonly);
             this.input.prop('readonly', readonly);
+            this.input.prop('disabled', !this.record);
         }
     });
 
@@ -2296,7 +2316,10 @@ function eval_pyson(value){
         },
         set_readonly: function(readonly) {
             Sao.View.Form.Text._super.set_readonly.call(this, readonly);
+            var record = this.record;
             this.input.prop('readonly', readonly);
+            this.input.prop('disabled', !record);
+            this.el.find('button').prop('disabled', readonly || !record)
         },
         translate_widget: function() {
             var widget = jQuery('<textarea/>', {
@@ -2396,10 +2419,13 @@ function eval_pyson(value){
         },
         set_readonly: function(readonly) {
             Sao.View.Form.RichText._super.set_readonly.call(this, readonly);
+            var record = this.record;
             this.input.prop('contenteditable', !readonly);
+            this.input.prop('disabled', !record);
+            this.el.find('button').prop('disabled', readonly || !record);
             if (this.toolbar) {
                 this.toolbar.find('button,input,select')
-                    .prop('disabled', readonly);
+                    .prop('disabled', readonly || !record);
             }
         },
         translate_widget: function() {
@@ -2451,14 +2477,22 @@ function eval_pyson(value){
                 'class': 'form-control input-sm mousetrap',
                 'name': attributes.name,
             }).appendTo(group);
-            this.but_primary = jQuery('<img/>', {
+            this.but_primary = jQuery('<button/>', {
+                'class': 'btn btn-link',
+                'type': 'button',
+                'tabindex': -1,
+            }).append(jQuery('<img/>', {
                 'class': 'icon',
-            }).appendTo(jQuery('<div/>', {
+            })).appendTo(jQuery('<div/>', {
                 'class': 'icon-input icon-primary',
             }).appendTo(group));
-            this.but_secondary = jQuery('<img/>', {
+            this.but_secondary = jQuery('<button/>', {
+                'class': 'btn btn-link',
+                'type': 'button',
+                'tabindex': -1,
+            }).append(jQuery('<img/>', {
                 'class': 'icon',
-            }).appendTo(jQuery('<div/>', {
+            })).appendTo(jQuery('<div/>', {
                 'class': 'icon-input icon-secondary',
             }).appendTo(group));
             this.but_primary.click('primary', this.edit.bind(this));
@@ -2547,6 +2581,8 @@ function eval_pyson(value){
 
             if (!record) {
                 this.entry.val('');
+                this.but_primary.parent().hide();
+                this.but_secondary.parent().hide();
                 return;
             }
             this.set_text(field.get_client(record));
@@ -2575,8 +2611,6 @@ function eval_pyson(value){
                 var button = items[2];
                 var icon_input = button.parent();
                 var type = 'input-icon-' + items[3];
-                // don't use .hide/.show because the display value is not
-                // correctly restored on modal.
                 if (!icon_name) {
                     icon_input.hide();
                     icon_input.parent().removeClass(type);
@@ -2584,7 +2618,7 @@ function eval_pyson(value){
                     icon_input.show();
                     icon_input.parent().addClass(type);
                     Sao.common.ICONFACTORY.get_icon_url(icon_name).then(function(url) {
-                        button.attr('src', url);
+                        button.find('img').attr('src', url);
                     });
                 }
                 button.attr('aria-label', tooltip);
@@ -2600,9 +2634,11 @@ function eval_pyson(value){
             this._set_button_sensitive();
         },
         _set_button_sensitive: function() {
+            var record = this.record;
             this.entry.prop('readonly', this._readonly);
-            this.but_primary.prop('disabled', !this.read_access);
-            this.but_secondary.prop('disabled', this._readonly);
+            this.entry.prop('disabled', !record);
+            this.but_primary.prop('disabled', !this.read_access || !record);
+            this.but_secondary.prop('disabled', this._readonly || !record);
         },
         get_access: function(type) {
             var model = this.get_model();
@@ -3315,34 +3351,41 @@ function eval_pyson(value){
             this.but_new.prop(
                 'disabled',
                 this._readonly ||
+                !record ||
                 !this.create_access ||
                 size_limit);
             this.but_del.prop(
                 'disabled',
                 this._readonly ||
+                !record ||
                 !this.delete_access ||
                 !this._position ||
                 !deletable);
             this.but_undel.prop(
                 'disabled',
                 this._readonly ||
+                !record ||
                 size_limit ||
                 !this._position);
             this.but_open.prop(
                 'disabled',
+                !record ||
                 !this._position ||
                 !this.read_access);
             this.but_next.prop(
                 'disabled',
+                !record ||
                 (this.position > 0) &&
                 ( this._position >= this._length));
             this.but_previous.prop(
                 'disabled',
+                !record ||
                 this._position <= 1);
             if (this.attributes.add_remove) {
                 this.but_add.prop(
                     'disabled',
                     this._readonly ||
+                    !record ||
                     size_limit ||
                     !this.write_access ||
                     !this.read_access);
@@ -3350,6 +3393,7 @@ function eval_pyson(value){
                 this.but_remove.prop(
                     'disabled',
                     this._readonly ||
+                    !record ||
                     !this.position ||
                     !this.write_access ||
                     !this.read_access);
@@ -3379,6 +3423,7 @@ function eval_pyson(value){
                     this.screen.current_record = null;
                     this.screen.group.parent = null;
                     this.screen.display();
+                    this.screen.screen_container.hide_filter();
                     return;
                 }

@@ -3862,10 +3907,10 @@ function eval_pyson(value){
                         (m2m_size >= field_size) && (field_size >= 0));
             }
 
-            this.entry.prop('disabled', this._readonly);
-            this.but_add.prop('disabled', this._readonly || size_limit);
-            this.but_remove.prop('disabled', this._readonly ||
-                this._position === 0);
+            this.entry.prop('disabled', this._readonly || !record);
+            this.but_add.prop('disabled', this._readonly || !record || size_limit);
+            this.but_remove.prop(
+                'disabled', this._readonly || !record || this._position === 0);
         },
         record_message: function(position, size) {
             this._position = position;
@@ -3893,6 +3938,7 @@ function eval_pyson(value){
                     this.screen.current_record = null;
                     this.screen.group.parent = null;
                     this.screen.display();
+                    this.screen.screen_container.hide_filter();
                     return;
                 }
                 var new_group = record.field_get_client(this.field_name);
@@ -4265,10 +4311,12 @@ function eval_pyson(value){
         },
         set_readonly: function(readonly) {
             Sao.View.Form.Binary._super.set_readonly.call(this, readonly);
-            this.but_select.prop('disabled', readonly);
-            this.but_clear.prop('disabled', readonly);
+            var record = this.record;
+            this.but_select.prop('disabled', readonly || !record);
+            this.but_clear.prop('disabled', readonly || !record);
             if (this.text) {
                 this.text.prop('readonly', readonly);
+                this.text.prop('disabled', !record);
             }
         }
     });
@@ -4370,8 +4418,9 @@ function eval_pyson(value){
         },
         set_readonly: function(readonly) {
             Sao.View.Form.Image._super.set_readonly.call(this, readonly);
-            this.but_select.prop('disabled', readonly);
-            this.but_clear.prop('disabled', readonly);
+            var record = this.record;
+            this.but_select.prop('disabled', readonly || !record);
+            this.but_clear.prop('disabled', readonly || !record);
         },
         clear: function() {
             Sao.View.Form.Image._super.clear.call(this);
@@ -4569,7 +4618,7 @@ function eval_pyson(value){
                 'class': this.class_,
             });
             this.button = jQuery('<a/>', {
-                'class': 'btn btn-lnk',
+                'class': 'btn btn-link',
                 'target': '_blank',
                 'rel': 'noreferrer noopener',
             }).text(attributes.string).appendTo(this.el);
@@ -4606,7 +4655,7 @@ function eval_pyson(value){
         },
         set_readonly: function(readonly) {
             Sao.View.Form.HTML._super.set_readonly.call(this, readonly);
-            this.el.find('button').prop('disabled', readonly);
+            this.el.find('button').prop('disabled', readonly || !this.record);
             if (readonly) {
                 this.el.find('a').hide();
             } else {
@@ -4818,9 +4867,10 @@ function eval_pyson(value){
                 var widget = this.fields[key];
                 widget.set_readonly(readonly);
             }
-            this.wid_text.prop('disabled', readonly);
+            this.wid_text.prop('disabled', readonly || !this.record);
         },
         _set_button_sensitive: function() {
+            var record = this.record;
             var create = this.attributes.create;
             if (create === undefined) {
                 create = 1;
@@ -4833,10 +4883,10 @@ function eval_pyson(value){
             } else if (typeof delete_ == 'string') {
                 delete_ = Boolean(parseInt(delete_, 10));
             }
-            this.but_add.prop('disabled', this._readonly || !create);
+            this.but_add.prop('disabled', this._readonly || !create || !record);
             for (var key in this.fields) {
                 var button = this.fields[key].button;
-                button.prop('disabled', this._readonly || !delete_);
+                button.prop('disabled', this._readonly || !delete_ || !record);
             }
         },
         add_line: function(key) {
@@ -5260,8 +5310,9 @@ function eval_pyson(value){
                 }
             });
             if (this.input_date[0].type == this._input) {
-                var icon = jQuery('<div/>', {
+                var icon = jQuery('<button/>', {
                     'class': 'btn btn-default',
+                    'type': 'button',
                     'aria-label': Sao.i18n.gettext("Open the calendar"),
                     'title': Sao.i18n.gettext("Open the calendar"),
                 }).prependTo(group);

diff --git a/tryton/sao/src/input-icon.less b/tryton/sao/src/input-icon.less
index 2a0782d7de..5b312630d0 100644
--- a/tryton/sao/src/input-icon.less
+++ b/tryton/sao/src/input-icon.less
@@ -14,6 +14,10 @@
         height: @input-height-base;
         line-height: @input-height-base;
         text-align: center;
+
+        > .btn {
+            padding: 0;
+        }
     }
     [dir="ltr"] & .icon-primary {
         left: 0px;
