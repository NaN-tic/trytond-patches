diff --git a/tryton/modules/account/account.py b/tryton/modules/account/account.py
index a3a2fe39a1..f4ff11be56 100644
--- a/tryton/modules/account/account.py
+++ b/tryton/modules/account/account.py
@@ -2136,7 +2136,7 @@ class GeneralLedgerAccountContext(ModelView):
     'General Ledger Account Context'
     __name__ = 'account.general_ledger.account.context'
     fiscalyear = fields.Many2One('account.fiscalyear', 'Fiscal Year',
-        required=True,
+        required=False,
         domain=[
             ('company', '=', Eval('company')),
             ],
@@ -2147,7 +2147,8 @@ class GeneralLedgerAccountContext(ModelView):
             ('start_date', '<=', (Eval('end_period'), 'start_date')),
             ],
         states={
-            'invisible': Eval('from_date', False) | Eval('to_date', False),
+            'invisible': (Eval('from_date', False) | Eval('to_date', False)
+                | ~Eval('fiscalyear', False))
             })
     end_period = fields.Many2One('account.period', 'End Period',
         domain=[
@@ -2155,7 +2156,8 @@ class GeneralLedgerAccountContext(ModelView):
             ('start_date', '>=', (Eval('start_period'), 'start_date'))
             ],
         states={
-            'invisible': Eval('from_date', False) | Eval('to_date', False),
+            'invisible': (Eval('from_date', False) | Eval('to_date', False)
+                | ~Eval('fiscalyear', False))
             })
     from_date = fields.Date("From Date",
         domain=[
@@ -2200,13 +2202,6 @@ class GeneralLedgerAccountContext(ModelView):
         elif period_id is not None and period_id >= 0:
             period = Period(period_id)
             return period.fiscalyear.id
-        else:
-            try:
-                fiscalyear = FiscalYear.find(
-                    context.get('company'), test_state=False)
-            except FiscalYearNotFoundError:
-                return None
-            return fiscalyear.id

     @classmethod
     def default_start_period(cls):
@@ -2388,7 +2383,7 @@ class GeneralLedgerLine(ModelSQL, ModelView):
     def __setup__(cls):
         super(GeneralLedgerLine, cls).__setup__()
         cls.__access__.add('account')
-        cls._order.insert(0, ('date', 'ASC'))
+        cls._order = [('date', 'DESC'), ('id', 'DESC')]

     @classmethod
     def table_query(cls):
